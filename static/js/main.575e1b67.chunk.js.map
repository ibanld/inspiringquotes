{"version":3,"sources":["components/CardFooterComponent.js","components/QuoteComponent.js","components/QuoteMachine.js","App.js","index.js"],"names":["CardFooter","getQuotes","quote","text","author","className","href","target","rel","type","id","onClick","Quote","style","textAlign","QuoteMachine","useState","setQuote","a","fetch","res","json","data","randomQuote","Math","floor","random","length","useEffect","elevation","Elevation","TWO","App","ReactDOM","render","document","getElementById"],"mappings":"uQAGe,SAASA,EAAT,GAA2C,IAArBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MACvCC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEd,OACC,6BACC,uBACCC,UAAU,aACVC,KAAI,gDAA2CH,EAA3C,eAAsDC,EAAtD,oBACJG,OAAO,SACPC,IAAI,sBACJC,KAAK,SACLC,GAAG,eAEH,uBAAGL,UAAU,oBAEd,kBAAC,SAAD,CAAQK,GAAG,YAAYD,KAAK,SAASE,QAAS,kBAAMV,MACnD,uBAAGI,UAAU,kBCjBF,SAASO,EAAT,GAAyB,IAATV,EAAQ,EAARA,MACpBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,OACb,OACI,oCACI,gCAAYC,UAAU,gCAAgCK,GAAG,QACpDP,GAEL,wBAAIO,GAAG,SAASL,UAAU,6BAA6BQ,MAAO,CAAEC,UAAW,UACtEV,ICLF,SAASW,IAAgB,IAAD,EACVC,mBAAS,IADC,mBAC9Bd,EAD8B,KACvBe,EADuB,KAGhChB,EAAS,uCAAG,gCAAAiB,EAAA,sEACCC,MAAM,+BADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,OAEXC,EAFW,OAGXC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QACpDV,EAASK,EAAKC,IAJG,2CAAH,qDAcf,OAPAK,qBACC,WACC3B,MAED,CAAEgB,IAIF,yBAAKZ,UAAU,aACd,kBAAC,OAAD,CAAMK,GAAG,YAAYL,UAAU,WAAWwB,UAAWC,YAAUC,KAC9D,kBAACnB,EAAD,CAAOV,MAAOA,IACd,kBAACF,EAAD,CAAYE,MAAOA,EAAOD,UAAWA,MCf1B+B,MARf,WACC,OACC,yBAAK3B,UAAU,OACd,kBAACU,EAAD,QCDHkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.575e1b67.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from '@blueprintjs/core';\r\n\r\nexport default function CardFooter({ getQuotes, quote }) {\r\n\tconst { text, author } = quote;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<a\r\n\t\t\t\tclassName='bp3-button'\r\n\t\t\t\thref={`https://twitter.com/intent/tweet?text=${text} by ${author}.%0D&via=imINKED`}\r\n\t\t\t\ttarget='_blank'\r\n\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\ttype='button'\r\n\t\t\t\tid='tweet-quote'\r\n\t\t\t>\r\n\t\t\t\t<i className='fab fa-twitter' />\r\n\t\t\t</a>\r\n\t\t\t<Button id='new-quote' type='button' onClick={() => getQuotes()}>\r\n\t\t\t\t<i className='fas fa-sync' />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Quote({quote}) {\r\n    const {text, author} = quote\r\n    return (\r\n        <>\r\n            <blockquote className='bp3-blockquote bp3-text-large' id='text'>\r\n                {text}\r\n            </blockquote>\r\n            <h5 id='author' className='bp3-text-muted bp3-heading' style={{ textAlign: 'right' }}>\r\n                {author}\r\n            </h5>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Elevation } from '@blueprintjs/core';\r\nimport CardFooter from './CardFooterComponent';\r\nimport Quote from './QuoteComponent';\r\n\r\nexport default function QuoteMachine() {\r\n\tconst [ quote, setQuote ] = useState({});\r\n\r\n\tconst getQuotes = async () => {\r\n\t\tconst res = await fetch('https://type.fit/api/quotes');\r\n\t\tconst data = await res.json();\r\n\t\tconst randomQuote = Math.floor(Math.random() * data.length);\r\n\t\tsetQuote(data[randomQuote]);\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tgetQuotes();\r\n\t\t},\r\n\t\t[ setQuote ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<Card id='quote-box' className='bp3-dark' elevation={Elevation.TWO}>\r\n\t\t\t\t<Quote quote={quote} />\r\n\t\t\t\t<CardFooter quote={quote} getQuotes={getQuotes} />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\nimport QuoteMachine from './components/QuoteMachine';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<QuoteMachine />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}